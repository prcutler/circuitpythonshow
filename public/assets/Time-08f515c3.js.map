{"version":3,"file":"Time-08f515c3.js","sources":["../../node_modules/.pnpm/@github+relative-time-element@4.2.4/node_modules/@github/relative-time-element/dist/duration-format-ponyfill.js","../../node_modules/.pnpm/@github+relative-time-element@4.2.4/node_modules/@github/relative-time-element/dist/duration.js","../../node_modules/.pnpm/@github+relative-time-element@4.2.4/node_modules/@github/relative-time-element/dist/relative-time-element.js","../../node_modules/.pnpm/@github+relative-time-element@4.2.4/node_modules/@github/relative-time-element/dist/relative-time-element-define.js","../../app/Resources/js/modules/SidebarToggler.ts","../../app/Resources/js/modules/Time.ts"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DurationFormat_options;\nclass ListFormatPonyFill {\n    formatToParts(members) {\n        const parts = [];\n        for (const value of members) {\n            parts.push({ type: 'element', value });\n            parts.push({ type: 'literal', value: ', ' });\n        }\n        return parts.slice(0, -1);\n    }\n}\nconst ListFormat = (typeof Intl !== 'undefined' && Intl.ListFormat) || ListFormatPonyFill;\nconst partsTable = [\n    ['years', 'year'],\n    ['months', 'month'],\n    ['weeks', 'week'],\n    ['days', 'day'],\n    ['hours', 'hour'],\n    ['minutes', 'minute'],\n    ['seconds', 'second'],\n    ['milliseconds', 'millisecond'],\n];\nconst twoDigitFormatOptions = { minimumIntegerDigits: 2 };\nexport default class DurationFormat {\n    constructor(locale, options = {}) {\n        _DurationFormat_options.set(this, void 0);\n        let style = String(options.style || 'short');\n        if (style !== 'long' && style !== 'short' && style !== 'narrow' && style !== 'digital')\n            style = 'short';\n        let prevStyle = style === 'digital' ? 'numeric' : style;\n        const hours = options.hours || prevStyle;\n        prevStyle = hours === '2-digit' ? 'numeric' : hours;\n        const minutes = options.minutes || prevStyle;\n        prevStyle = minutes === '2-digit' ? 'numeric' : minutes;\n        const seconds = options.seconds || prevStyle;\n        prevStyle = seconds === '2-digit' ? 'numeric' : seconds;\n        const milliseconds = options.milliseconds || prevStyle;\n        __classPrivateFieldSet(this, _DurationFormat_options, {\n            locale,\n            style,\n            years: options.years || style === 'digital' ? 'short' : style,\n            yearsDisplay: options.yearsDisplay === 'always' ? 'always' : 'auto',\n            months: options.months || style === 'digital' ? 'short' : style,\n            monthsDisplay: options.monthsDisplay === 'always' ? 'always' : 'auto',\n            weeks: options.weeks || style === 'digital' ? 'short' : style,\n            weeksDisplay: options.weeksDisplay === 'always' ? 'always' : 'auto',\n            days: options.days || style === 'digital' ? 'short' : style,\n            daysDisplay: options.daysDisplay === 'always' ? 'always' : 'auto',\n            hours,\n            hoursDisplay: options.hoursDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            minutes,\n            minutesDisplay: options.minutesDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            seconds,\n            secondsDisplay: options.secondsDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            milliseconds,\n            millisecondsDisplay: options.millisecondsDisplay === 'always' ? 'always' : 'auto',\n        }, \"f\");\n    }\n    resolvedOptions() {\n        return __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n    }\n    formatToParts(duration) {\n        const list = [];\n        const options = __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n        const style = options.style;\n        const locale = options.locale;\n        for (const [unit, nfUnit] of partsTable) {\n            const value = duration[unit];\n            if (options[`${unit}Display`] === 'auto' && !value)\n                continue;\n            const unitStyle = options[unit];\n            const nfOpts = unitStyle === '2-digit'\n                ? twoDigitFormatOptions\n                : unitStyle === 'numeric'\n                    ? {}\n                    : { style: 'unit', unit: nfUnit, unitDisplay: unitStyle };\n            list.push(new Intl.NumberFormat(locale, nfOpts).format(value));\n        }\n        return new ListFormat(locale, {\n            type: 'unit',\n            style: style === 'digital' ? 'short' : style,\n        }).formatToParts(list);\n    }\n    format(duration) {\n        return this.formatToParts(duration)\n            .map(p => p.value)\n            .join('');\n    }\n}\n_DurationFormat_options = new WeakMap();\n","import DurationFormat from './duration-format-ponyfill.js';\nconst durationRe = /^[-+]?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?)?$/;\nexport const unitNames = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\nexport const isDuration = (str) => durationRe.test(str);\nexport class Duration {\n    constructor(years = 0, months = 0, weeks = 0, days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n        this.years = years;\n        this.months = months;\n        this.weeks = weeks;\n        this.days = days;\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n        this.milliseconds = milliseconds;\n        this.years || (this.years = 0);\n        this.sign || (this.sign = Math.sign(this.years));\n        this.months || (this.months = 0);\n        this.sign || (this.sign = Math.sign(this.months));\n        this.weeks || (this.weeks = 0);\n        this.sign || (this.sign = Math.sign(this.weeks));\n        this.days || (this.days = 0);\n        this.sign || (this.sign = Math.sign(this.days));\n        this.hours || (this.hours = 0);\n        this.sign || (this.sign = Math.sign(this.hours));\n        this.minutes || (this.minutes = 0);\n        this.sign || (this.sign = Math.sign(this.minutes));\n        this.seconds || (this.seconds = 0);\n        this.sign || (this.sign = Math.sign(this.seconds));\n        this.milliseconds || (this.milliseconds = 0);\n        this.sign || (this.sign = Math.sign(this.milliseconds));\n        this.blank = this.sign === 0;\n    }\n    abs() {\n        return new Duration(Math.abs(this.years), Math.abs(this.months), Math.abs(this.weeks), Math.abs(this.days), Math.abs(this.hours), Math.abs(this.minutes), Math.abs(this.seconds), Math.abs(this.milliseconds));\n    }\n    static from(durationLike) {\n        var _a;\n        if (typeof durationLike === 'string') {\n            const str = String(durationLike).trim();\n            const factor = str.startsWith('-') ? -1 : 1;\n            const parsed = (_a = str\n                .match(durationRe)) === null || _a === void 0 ? void 0 : _a.slice(1).map(x => (Number(x) || 0) * factor);\n            if (!parsed)\n                return new Duration();\n            return new Duration(...parsed);\n        }\n        else if (typeof durationLike === 'object') {\n            const { years, months, weeks, days, hours, minutes, seconds, milliseconds } = durationLike;\n            return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds);\n        }\n        throw new RangeError('invalid duration');\n    }\n    static compare(one, two) {\n        const now = Date.now();\n        const oneApplied = Math.abs(applyDuration(now, Duration.from(one)).getTime() - now);\n        const twoApplied = Math.abs(applyDuration(now, Duration.from(two)).getTime() - now);\n        return oneApplied > twoApplied ? -1 : oneApplied < twoApplied ? 1 : 0;\n    }\n    toLocaleString(locale, opts) {\n        return new DurationFormat(locale, opts).format(this);\n    }\n}\nexport function applyDuration(date, duration) {\n    const r = new Date(date);\n    r.setFullYear(r.getFullYear() + duration.years);\n    r.setMonth(r.getMonth() + duration.months);\n    r.setDate(r.getDate() + duration.weeks * 7 + duration.days);\n    r.setHours(r.getHours() + duration.hours);\n    r.setMinutes(r.getMinutes() + duration.minutes);\n    r.setSeconds(r.getSeconds() + duration.seconds);\n    return r;\n}\nexport function elapsedTime(date, precision = 'second', now = Date.now()) {\n    const delta = date.getTime() - now;\n    if (delta === 0)\n        return new Duration();\n    const sign = Math.sign(delta);\n    const ms = Math.abs(delta);\n    const sec = Math.floor(ms / 1000);\n    const min = Math.floor(sec / 60);\n    const hr = Math.floor(min / 60);\n    const day = Math.floor(hr / 24);\n    const month = Math.floor(day / 30);\n    const year = Math.floor(month / 12);\n    const i = unitNames.indexOf(precision) || unitNames.length;\n    return new Duration(i >= 0 ? year * sign : 0, i >= 1 ? (month - year * 12) * sign : 0, 0, i >= 3 ? (day - month * 30) * sign : 0, i >= 4 ? (hr - day * 24) * sign : 0, i >= 5 ? (min - hr * 60) * sign : 0, i >= 6 ? (sec - min * 60) * sign : 0, i >= 7 ? (ms - sec * 1000) * sign : 0);\n}\nexport function roundToSingleUnit(duration, { relativeTo = Date.now() } = {}) {\n    relativeTo = new Date(relativeTo);\n    if (duration.blank)\n        return duration;\n    const sign = duration.sign;\n    let years = Math.abs(duration.years);\n    let months = Math.abs(duration.months);\n    let weeks = Math.abs(duration.weeks);\n    let days = Math.abs(duration.days);\n    let hours = Math.abs(duration.hours);\n    let minutes = Math.abs(duration.minutes);\n    let seconds = Math.abs(duration.seconds);\n    let milliseconds = Math.abs(duration.milliseconds);\n    if (milliseconds >= 900)\n        seconds += Math.round(milliseconds / 1000);\n    if (seconds || minutes || hours || days || weeks || months || years) {\n        milliseconds = 0;\n    }\n    if (seconds >= 55)\n        minutes += Math.round(seconds / 60);\n    if (minutes || hours || days || weeks || months || years)\n        seconds = 0;\n    if (minutes >= 55)\n        hours += Math.round(minutes / 60);\n    if (hours || days || weeks || months || years)\n        minutes = 0;\n    if (days && hours >= 12)\n        days += Math.round(hours / 24);\n    if (!days && hours >= 21)\n        days += Math.round(hours / 24);\n    if (days || weeks || months || years)\n        hours = 0;\n    const currentYear = relativeTo.getFullYear();\n    let currentMonth = relativeTo.getMonth();\n    const currentDate = relativeTo.getDate();\n    if (days >= 27 || (years + months && days)) {\n        relativeTo.setDate(currentDate + days * sign);\n        months += Math.abs(relativeTo.getFullYear() >= currentYear\n            ? relativeTo.getMonth() - currentMonth\n            : relativeTo.getMonth() - currentMonth - 12);\n        if (months) {\n            days = 0;\n        }\n        currentMonth = relativeTo.getMonth();\n    }\n    if (days >= 6)\n        weeks += Math.round(days / 7);\n    if (weeks || months || years)\n        days = 0;\n    if (weeks >= 4)\n        months += Math.round(weeks / 4);\n    if (months || years)\n        weeks = 0;\n    if (months >= 11 || (years && months)) {\n        relativeTo.setMonth(relativeTo.getMonth() + months * sign);\n        years += Math.abs(currentYear - relativeTo.getFullYear());\n    }\n    if (years)\n        months = 0;\n    return new Duration(years * sign, months * sign, weeks * sign, days * sign, hours * sign, minutes * sign, seconds * sign, milliseconds * sign);\n}\nexport function getRelativeTimeUnit(duration, opts) {\n    const rounded = roundToSingleUnit(duration, opts);\n    if (rounded.blank)\n        return [0, 'second'];\n    for (const unit of unitNames) {\n        if (unit === 'millisecond')\n            continue;\n        const val = rounded[`${unit}s`];\n        if (val)\n            return [val, unit];\n    }\n    return [0, 'second'];\n}\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _RelativeTimeElement_instances, _RelativeTimeElement_customTitle, _RelativeTimeElement_updating, _RelativeTimeElement_lang_get, _RelativeTimeElement_renderRoot, _RelativeTimeElement_getFormattedTitle, _RelativeTimeElement_resolveFormat, _RelativeTimeElement_getDurationFormat, _RelativeTimeElement_getRelativeFormat, _RelativeTimeElement_getDateTimeFormat, _RelativeTimeElement_onRelativeTimeUpdated;\nimport { Duration, elapsedTime, getRelativeTimeUnit, isDuration, roundToSingleUnit, unitNames } from './duration.js';\nconst root = (typeof globalThis !== 'undefined' ? globalThis : window);\nconst HTMLElement = root.HTMLElement || null;\nconst emptyDuration = new Duration();\nconst microEmptyDuration = new Duration(0, 0, 0, 0, 0, 1);\nexport class RelativeTimeUpdatedEvent extends Event {\n    constructor(oldText, newText, oldTitle, newTitle) {\n        super('relative-time-updated', { bubbles: true, composed: true });\n        this.oldText = oldText;\n        this.newText = newText;\n        this.oldTitle = oldTitle;\n        this.newTitle = newTitle;\n    }\n}\nfunction getUnitFactor(el) {\n    if (!el.date)\n        return Infinity;\n    if (el.format === 'duration' || el.format === 'elapsed') {\n        const precision = el.precision;\n        if (precision === 'second') {\n            return 1000;\n        }\n        else if (precision === 'minute') {\n            return 60 * 1000;\n        }\n    }\n    const ms = Math.abs(Date.now() - el.date.getTime());\n    if (ms < 60 * 1000)\n        return 1000;\n    if (ms < 60 * 60 * 1000)\n        return 60 * 1000;\n    return 60 * 60 * 1000;\n}\nconst dateObserver = new (class {\n    constructor() {\n        this.elements = new Set();\n        this.time = Infinity;\n        this.timer = -1;\n    }\n    observe(element) {\n        if (this.elements.has(element))\n            return;\n        this.elements.add(element);\n        const date = element.date;\n        if (date && date.getTime()) {\n            const ms = getUnitFactor(element);\n            const time = Date.now() + ms;\n            if (time < this.time) {\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => this.update(), ms);\n                this.time = time;\n            }\n        }\n    }\n    unobserve(element) {\n        if (!this.elements.has(element))\n            return;\n        this.elements.delete(element);\n    }\n    update() {\n        clearTimeout(this.timer);\n        if (!this.elements.size)\n            return;\n        let nearestDistance = Infinity;\n        for (const timeEl of this.elements) {\n            nearestDistance = Math.min(nearestDistance, getUnitFactor(timeEl));\n            timeEl.update();\n        }\n        this.time = Math.min(60 * 60 * 1000, nearestDistance);\n        this.timer = setTimeout(() => this.update(), this.time);\n        this.time += Date.now();\n    }\n})();\nexport default class RelativeTimeElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        _RelativeTimeElement_instances.add(this);\n        _RelativeTimeElement_customTitle.set(this, false);\n        _RelativeTimeElement_updating.set(this, false);\n        _RelativeTimeElement_renderRoot.set(this, this.shadowRoot ? this.shadowRoot : this.attachShadow ? this.attachShadow({ mode: 'open' }) : this);\n        _RelativeTimeElement_onRelativeTimeUpdated.set(this, null);\n    }\n    static get observedAttributes() {\n        return [\n            'second',\n            'minute',\n            'hour',\n            'weekday',\n            'day',\n            'month',\n            'year',\n            'time-zone-name',\n            'prefix',\n            'threshold',\n            'tense',\n            'precision',\n            'format',\n            'format-style',\n            'datetime',\n            'lang',\n            'title',\n        ];\n    }\n    get onRelativeTimeUpdated() {\n        return __classPrivateFieldGet(this, _RelativeTimeElement_onRelativeTimeUpdated, \"f\");\n    }\n    set onRelativeTimeUpdated(listener) {\n        if (__classPrivateFieldGet(this, _RelativeTimeElement_onRelativeTimeUpdated, \"f\")) {\n            this.removeEventListener('relative-time-updated', __classPrivateFieldGet(this, _RelativeTimeElement_onRelativeTimeUpdated, \"f\"));\n        }\n        __classPrivateFieldSet(this, _RelativeTimeElement_onRelativeTimeUpdated, typeof listener === 'object' || typeof listener === 'function' ? listener : null, \"f\");\n        if (typeof listener === 'function') {\n            this.addEventListener('relative-time-updated', listener);\n        }\n    }\n    get second() {\n        const second = this.getAttribute('second');\n        if (second === 'numeric' || second === '2-digit')\n            return second;\n    }\n    set second(value) {\n        this.setAttribute('second', value || '');\n    }\n    get minute() {\n        const minute = this.getAttribute('minute');\n        if (minute === 'numeric' || minute === '2-digit')\n            return minute;\n    }\n    set minute(value) {\n        this.setAttribute('minute', value || '');\n    }\n    get hour() {\n        const hour = this.getAttribute('hour');\n        if (hour === 'numeric' || hour === '2-digit')\n            return hour;\n    }\n    set hour(value) {\n        this.setAttribute('hour', value || '');\n    }\n    get weekday() {\n        const weekday = this.getAttribute('weekday');\n        if (weekday === 'long' || weekday === 'short' || weekday === 'narrow') {\n            return weekday;\n        }\n        if (this.format === 'datetime' && weekday !== '')\n            return this.formatStyle;\n    }\n    set weekday(value) {\n        this.setAttribute('weekday', value || '');\n    }\n    get day() {\n        var _a;\n        const day = (_a = this.getAttribute('day')) !== null && _a !== void 0 ? _a : 'numeric';\n        if (day === 'numeric' || day === '2-digit')\n            return day;\n    }\n    set day(value) {\n        this.setAttribute('day', value || '');\n    }\n    get month() {\n        const format = this.format;\n        let month = this.getAttribute('month');\n        if (month === '')\n            return;\n        month !== null && month !== void 0 ? month : (month = format === 'datetime' ? this.formatStyle : 'short');\n        if (month === 'numeric' || month === '2-digit' || month === 'short' || month === 'long' || month === 'narrow') {\n            return month;\n        }\n    }\n    set month(value) {\n        this.setAttribute('month', value || '');\n    }\n    get year() {\n        var _a;\n        const year = this.getAttribute('year');\n        if (year === 'numeric' || year === '2-digit')\n            return year;\n        if (!this.hasAttribute('year') && new Date().getUTCFullYear() !== ((_a = this.date) === null || _a === void 0 ? void 0 : _a.getUTCFullYear())) {\n            return 'numeric';\n        }\n    }\n    set year(value) {\n        this.setAttribute('year', value || '');\n    }\n    get timeZoneName() {\n        const name = this.getAttribute('time-zone-name');\n        if (name === 'long' ||\n            name === 'short' ||\n            name === 'shortOffset' ||\n            name === 'longOffset' ||\n            name === 'shortGeneric' ||\n            name === 'longGeneric') {\n            return name;\n        }\n    }\n    set timeZoneName(value) {\n        this.setAttribute('time-zone-name', value || '');\n    }\n    get prefix() {\n        var _a;\n        return (_a = this.getAttribute('prefix')) !== null && _a !== void 0 ? _a : (this.format === 'datetime' ? '' : 'on');\n    }\n    set prefix(value) {\n        this.setAttribute('prefix', value);\n    }\n    get threshold() {\n        const threshold = this.getAttribute('threshold');\n        return threshold && isDuration(threshold) ? threshold : 'P30D';\n    }\n    set threshold(value) {\n        this.setAttribute('threshold', value);\n    }\n    get tense() {\n        const tense = this.getAttribute('tense');\n        if (tense === 'past')\n            return 'past';\n        if (tense === 'future')\n            return 'future';\n        return 'auto';\n    }\n    set tense(value) {\n        this.setAttribute('tense', value);\n    }\n    get precision() {\n        const precision = this.getAttribute('precision');\n        if (unitNames.includes(precision))\n            return precision;\n        if (this.format === 'micro')\n            return 'minute';\n        return 'second';\n    }\n    set precision(value) {\n        this.setAttribute('precision', value);\n    }\n    get format() {\n        const format = this.getAttribute('format');\n        if (format === 'datetime')\n            return 'datetime';\n        if (format === 'relative')\n            return 'relative';\n        if (format === 'duration')\n            return 'duration';\n        if (format === 'micro')\n            return 'micro';\n        if (format === 'elapsed')\n            return 'elapsed';\n        return 'auto';\n    }\n    set format(value) {\n        this.setAttribute('format', value);\n    }\n    get formatStyle() {\n        const formatStyle = this.getAttribute('format-style');\n        if (formatStyle === 'long')\n            return 'long';\n        if (formatStyle === 'short')\n            return 'short';\n        if (formatStyle === 'narrow')\n            return 'narrow';\n        const format = this.format;\n        if (format === 'elapsed' || format === 'micro')\n            return 'narrow';\n        if (format === 'datetime')\n            return 'short';\n        return 'long';\n    }\n    set formatStyle(value) {\n        this.setAttribute('format-style', value);\n    }\n    get datetime() {\n        return this.getAttribute('datetime') || '';\n    }\n    set datetime(value) {\n        this.setAttribute('datetime', value);\n    }\n    get date() {\n        const parsed = Date.parse(this.datetime);\n        return Number.isNaN(parsed) ? null : new Date(parsed);\n    }\n    set date(value) {\n        this.datetime = (value === null || value === void 0 ? void 0 : value.toISOString()) || '';\n    }\n    connectedCallback() {\n        this.update();\n    }\n    disconnectedCallback() {\n        dateObserver.unobserve(this);\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n        if (oldValue === newValue)\n            return;\n        if (attrName === 'title') {\n            __classPrivateFieldSet(this, _RelativeTimeElement_customTitle, newValue !== null && (this.date && __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_getFormattedTitle).call(this, this.date)) !== newValue, \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _RelativeTimeElement_updating, \"f\") && !(attrName === 'title' && __classPrivateFieldGet(this, _RelativeTimeElement_customTitle, \"f\"))) {\n            __classPrivateFieldSet(this, _RelativeTimeElement_updating, (async () => {\n                await Promise.resolve();\n                this.update();\n            })(), \"f\");\n        }\n    }\n    update() {\n        const oldText = __classPrivateFieldGet(this, _RelativeTimeElement_renderRoot, \"f\").textContent || this.textContent || '';\n        const oldTitle = this.getAttribute('title') || '';\n        let newTitle = oldTitle;\n        const date = this.date;\n        if (typeof Intl === 'undefined' || !Intl.DateTimeFormat || !date) {\n            __classPrivateFieldGet(this, _RelativeTimeElement_renderRoot, \"f\").textContent = oldText;\n            return;\n        }\n        const now = Date.now();\n        if (!__classPrivateFieldGet(this, _RelativeTimeElement_customTitle, \"f\")) {\n            newTitle = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_getFormattedTitle).call(this, date) || '';\n            if (newTitle)\n                this.setAttribute('title', newTitle);\n        }\n        const duration = elapsedTime(date, this.precision, now);\n        const format = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_resolveFormat).call(this, duration);\n        let newText = oldText;\n        if (format === 'duration') {\n            newText = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_getDurationFormat).call(this, duration);\n        }\n        else if (format === 'relative') {\n            newText = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_getRelativeFormat).call(this, duration);\n        }\n        else {\n            newText = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"m\", _RelativeTimeElement_getDateTimeFormat).call(this, date);\n        }\n        if (newText) {\n            __classPrivateFieldGet(this, _RelativeTimeElement_renderRoot, \"f\").textContent = newText;\n        }\n        else if (this.shadowRoot === __classPrivateFieldGet(this, _RelativeTimeElement_renderRoot, \"f\") && this.textContent) {\n            __classPrivateFieldGet(this, _RelativeTimeElement_renderRoot, \"f\").textContent = this.textContent;\n        }\n        if (newText !== oldText || newTitle !== oldTitle) {\n            this.dispatchEvent(new RelativeTimeUpdatedEvent(oldText, newText, oldTitle, newTitle));\n        }\n        if (format === 'relative' || format === 'duration') {\n            dateObserver.observe(this);\n        }\n        else {\n            dateObserver.unobserve(this);\n        }\n        __classPrivateFieldSet(this, _RelativeTimeElement_updating, false, \"f\");\n    }\n}\n_RelativeTimeElement_customTitle = new WeakMap(), _RelativeTimeElement_updating = new WeakMap(), _RelativeTimeElement_renderRoot = new WeakMap(), _RelativeTimeElement_onRelativeTimeUpdated = new WeakMap(), _RelativeTimeElement_instances = new WeakSet(), _RelativeTimeElement_lang_get = function _RelativeTimeElement_lang_get() {\n    var _a;\n    return (((_a = this.closest('[lang]')) === null || _a === void 0 ? void 0 : _a.getAttribute('lang')) ||\n        this.ownerDocument.documentElement.getAttribute('lang') ||\n        'default');\n}, _RelativeTimeElement_getFormattedTitle = function _RelativeTimeElement_getFormattedTitle(date) {\n    return new Intl.DateTimeFormat(__classPrivateFieldGet(this, _RelativeTimeElement_instances, \"a\", _RelativeTimeElement_lang_get), {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n        timeZoneName: 'short',\n    }).format(date);\n}, _RelativeTimeElement_resolveFormat = function _RelativeTimeElement_resolveFormat(duration) {\n    const format = this.format;\n    if (format === 'datetime')\n        return 'datetime';\n    if (format === 'duration')\n        return 'duration';\n    if (format === 'elapsed')\n        return 'duration';\n    if (format === 'micro')\n        return 'duration';\n    if ((format === 'auto' || format === 'relative') && typeof Intl !== 'undefined' && Intl.RelativeTimeFormat) {\n        const tense = this.tense;\n        if (tense === 'past' || tense === 'future')\n            return 'relative';\n        if (Duration.compare(duration, this.threshold) === 1)\n            return 'relative';\n    }\n    return 'datetime';\n}, _RelativeTimeElement_getDurationFormat = function _RelativeTimeElement_getDurationFormat(duration) {\n    const locale = __classPrivateFieldGet(this, _RelativeTimeElement_instances, \"a\", _RelativeTimeElement_lang_get);\n    const format = this.format;\n    const style = this.formatStyle;\n    const tense = this.tense;\n    let empty = emptyDuration;\n    if (format === 'micro') {\n        duration = roundToSingleUnit(duration);\n        empty = microEmptyDuration;\n        if ((this.tense === 'past' && duration.sign !== -1) || (this.tense === 'future' && duration.sign !== 1)) {\n            duration = microEmptyDuration;\n        }\n    }\n    else if ((tense === 'past' && duration.sign !== -1) || (tense === 'future' && duration.sign !== 1)) {\n        duration = empty;\n    }\n    const display = `${this.precision}sDisplay`;\n    if (duration.blank) {\n        return empty.toLocaleString(locale, { style, [display]: 'always' });\n    }\n    return duration.abs().toLocaleString(locale, { style });\n}, _RelativeTimeElement_getRelativeFormat = function _RelativeTimeElement_getRelativeFormat(duration) {\n    const relativeFormat = new Intl.RelativeTimeFormat(__classPrivateFieldGet(this, _RelativeTimeElement_instances, \"a\", _RelativeTimeElement_lang_get), {\n        numeric: 'auto',\n        style: this.formatStyle,\n    });\n    const tense = this.tense;\n    if (tense === 'future' && duration.sign !== 1)\n        duration = emptyDuration;\n    if (tense === 'past' && duration.sign !== -1)\n        duration = emptyDuration;\n    const [int, unit] = getRelativeTimeUnit(duration);\n    if (unit === 'second' && int < 10) {\n        return relativeFormat.format(0, 'second');\n    }\n    return relativeFormat.format(int, unit);\n}, _RelativeTimeElement_getDateTimeFormat = function _RelativeTimeElement_getDateTimeFormat(date) {\n    const formatter = new Intl.DateTimeFormat(__classPrivateFieldGet(this, _RelativeTimeElement_instances, \"a\", _RelativeTimeElement_lang_get), {\n        second: this.second,\n        minute: this.minute,\n        hour: this.hour,\n        weekday: this.weekday,\n        day: this.day,\n        month: this.month,\n        year: this.year,\n        timeZoneName: this.timeZoneName,\n    });\n    return `${this.prefix} ${formatter.format(date)}`.trim();\n};\n","import RelativeTimeElement from './relative-time-element.js';\nconst root = (typeof globalThis !== 'undefined' ? globalThis : window);\ntry {\n    customElements.define('relative-time', RelativeTimeElement);\n    root.RelativeTimeElement = RelativeTimeElement;\n}\ncatch (e) {\n    if (!(root.DOMException && e instanceof DOMException && e.name === 'NotSupportedError') &&\n        !(e instanceof ReferenceError)) {\n        throw e;\n    }\n}\nexport default RelativeTimeElement;\nexport * from './relative-time-element.js';\n","const SidebarToggler = (): void => {\n  const sidebar = document.querySelector(\n    \"aside[data-sidebar-toggler='sidebar']\"\n  ) as HTMLElement;\n  const toggler = document.querySelector(\n    \"button[data-sidebar-toggler='toggler']\"\n  ) as HTMLButtonElement;\n  const sidebarBackdrop = document.querySelector(\n    \"div[data-sidebar-toggler='backdrop']\"\n  ) as HTMLDivElement;\n\n  if (typeof sidebar.dataset.toggleClass !== \"undefined\") {\n    const setAriaExpanded = (isExpanded: \"true\" | \"false\") => {\n      toggler.setAttribute(\"aria-expanded\", isExpanded);\n      sidebarBackdrop.setAttribute(\"aria-expanded\", isExpanded);\n    };\n\n    const hideSidebar = () => {\n      setAriaExpanded(\"false\");\n      sidebar.classList.add(sidebar.dataset.toggleClass as string);\n      sidebarBackdrop.classList.add(\"hidden\");\n      toggler.classList.add(toggler.dataset.toggleClass as string);\n    };\n\n    const showSidebar = () => {\n      setAriaExpanded(\"true\");\n      sidebar.classList.remove(sidebar.dataset.toggleClass as string);\n      sidebarBackdrop.classList.remove(\"hidden\");\n      toggler.classList.remove(toggler.dataset.toggleClass as string);\n    };\n\n    toggler.addEventListener(\"click\", () => {\n      if (sidebar.classList.contains(sidebar.dataset.hideClass as string)) {\n        showSidebar();\n      } else {\n        hideSidebar();\n      }\n    });\n\n    sidebarBackdrop.addEventListener(\"click\", () => {\n      if (!sidebar.classList.contains(sidebar.dataset.hideClass as string)) {\n        hideSidebar();\n      }\n    });\n\n    const setAriaExpandedOnWindowEvent = () => {\n      const isExpanded =\n        !sidebar.classList.contains(sidebar.dataset.hideClass as string) ||\n        window.innerWidth >= 768;\n      const ariaExpanded = toggler.getAttribute(\"aria-expanded\");\n      if (isExpanded && (!ariaExpanded || ariaExpanded === \"false\")) {\n        setAriaExpanded(\"true\");\n      } else if (!isExpanded && (!ariaExpanded || ariaExpanded === \"true\")) {\n        setAriaExpanded(\"false\");\n      }\n    };\n\n    window.addEventListener(\"load\", setAriaExpandedOnWindowEvent);\n    window.addEventListener(\"resize\", setAriaExpandedOnWindowEvent);\n  }\n};\n\nexport default SidebarToggler;\n","const Time = (): void => {\n  const timeElements: NodeListOf<HTMLTimeElement> =\n    document.querySelectorAll(\"time\");\n\n  for (let i = 0; i < timeElements.length; i++) {\n    const timeElement = timeElements[i];\n\n    // convert UTC date value to user timezone\n    const timeElementDateTime = timeElement.getAttribute(\"datetime\");\n\n    // check if timeElementDateTime is not null and not a duration\n    if (timeElementDateTime && !timeElementDateTime.startsWith(\"PT\")) {\n      const dateTime = new Date(timeElementDateTime);\n\n      // replace <time/> title with localized datetime\n      timeElement.setAttribute(\"title\", dateTime.toLocaleString());\n    }\n  }\n};\n\nexport default Time;\n"],"names":["__classPrivateFieldSet","this","receiver","state","value","kind","f","__classPrivateFieldGet","_DurationFormat_options","ListFormatPonyFill","members","parts","ListFormat","partsTable","twoDigitFormatOptions","DurationFormat","locale","options","style","prevStyle","hours","minutes","seconds","milliseconds","duration","list","unit","nfUnit","unitStyle","nfOpts","p","durationRe","unitNames","isDuration","str","Duration","years","months","weeks","days","durationLike","_a","factor","parsed","x","one","two","now","oneApplied","applyDuration","twoApplied","opts","date","r","elapsedTime","precision","delta","sign","ms","sec","min","hr","day","month","year","i","roundToSingleUnit","relativeTo","currentYear","currentMonth","currentDate","getRelativeTimeUnit","rounded","val","_RelativeTimeElement_instances","_RelativeTimeElement_customTitle","_RelativeTimeElement_updating","_RelativeTimeElement_lang_get","_RelativeTimeElement_renderRoot","_RelativeTimeElement_getFormattedTitle","_RelativeTimeElement_resolveFormat","_RelativeTimeElement_getDurationFormat","_RelativeTimeElement_getRelativeFormat","_RelativeTimeElement_getDateTimeFormat","_RelativeTimeElement_onRelativeTimeUpdated","root","HTMLElement","emptyDuration","microEmptyDuration","RelativeTimeUpdatedEvent","oldText","newText","oldTitle","newTitle","getUnitFactor","el","dateObserver","element","time","nearestDistance","timeEl","RelativeTimeElement","listener","second","minute","hour","weekday","format","name","threshold","tense","formatStyle","attrName","oldValue","newValue","empty","display","relativeFormat","int","formatter","e","SidebarToggler","sidebar","toggler","sidebarBackdrop","setAriaExpanded","isExpanded","hideSidebar","showSidebar","setAriaExpandedOnWindowEvent","ariaExpanded","Time","timeElements","timeElement","timeElementDateTime","dateTime"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}